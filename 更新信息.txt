Version <1.1.0.1 更新信息：
	0. 算法太菜了:(
	0. 懒得写了……

Version 1.1.0.* 更新信息：

1.spj()函数末尾对于进攻落子的最终判定问题:
	a. 使用dp[][]矩阵最大值
	
2.walk()系列函数在1.1版本及以上已合并为一个函数(核心:类卷积)
	a. 参数表中加入pat[](pattern)数组,表示类卷积核
	b. pat[i] \belong_to [0, 2] 表示匹配的棋子或空格, 不满pat[]长度的部分在末尾补-1(至少一个)
	c. 以pat[0]为方向数组遍历的旋转中心, 同时记得判定数组(crt[][], pat[])越界, 即返回值为-1

3.不再使用srand((unsigned)time(0))与rand()
	a. 通过定义random_number(int l, int r)取得长周期真随机数

4.通过哈希降低每个dp[][]中最大元素的重复概率
	a. 详见spj.hpp/init_dp()

Version 1.1.0.* 更新信息
	
1.修正了矩阵访问越界问题
	a. spj.hpp中用inc(const int& x, const int& y)代替直接访问crt[][]沙盘
	b. 解决了不支持连击鼠标的问题

2.解决了人机对战中无征兆地运行崩溃问题
	a. 将walk()遍历函数中pos[4]改为用vector [+vector::clear(), +vector::push_back()] 定义
	
3.进化人机对战算法
	a. 进化了dp[][]中元素权重赋予规则
	b. 静态调整了部分模式串的权值大小
	c. 优化了walk()时间复杂度

4.改进了禁手判定
	a. 改进三三禁手判定规则

5.改进了每次玩家落子落子后的胜负判定
	a. 在玩家落子后的代码部分在原有基础上增加对胜负的判定

6.填充了棋盘界面悔棋按钮
	a. 不允许玩家悔棋(其实就是增加了一个MessagBoxW()框框，写着”落子无悔“，还好意思说)【(-_^)】

Version 1.2.0.*
1.引入了蒙特卡洛搜索树，但是还是有bug

2.修正函数接口

3.优化时间复杂度，并且尝试弃用va_algo.hpp

4.再次改进闪退、函数接口问题

Version 2.0.0.*
1.完全弃用va_algo.hpp, 尝试弃用spj.hpp
	a.时间复杂度大幅增加，希望加入多线程

分支版本 - 副本 加入了多线程，并且时间复杂度有所改进
	a.CPU占用率太高，线程过多
